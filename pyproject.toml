[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genai-trading-bot"
version = "0.1.0"
description = "GenAI-powered trading bot with modular architecture and multi-LLM support"
authors = [{name = "Trading Bot Team", email = "team@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.0.0",
    "typer[all]>=0.9.0",
    "httpx>=0.24.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "python-binance>=1.0.19",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "tenacity>=8.0.0",
    "websockets>=11.0.0",
    "asyncio-mqtt>=0.13.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "python-telegram-bot>=20.0",
    "psutil>=5.9.0",
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
trading-bot = "src.app:main"
autonomous-trading = "src.autonomous_trading:main"
telegram-bot = "src.telegram_bot_cli:main"
api-server = "src.api_cli:main"
health-check = "scripts.health_check:main"
backup-restore = "scripts.backup_restore:main"
start-bot = "scripts.start_bot:main"
run-tests = "scripts.run_tests:main"
integration-tests = "scripts.run_integration_tests:main"
performance-test = "scripts.performance_test:main"
security-test = "scripts.security_test:main"
load-test = "scripts.load_test:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py39']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "binance.*",
    "openai.*",
    "anthropic.*",
    "google.generativeai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
